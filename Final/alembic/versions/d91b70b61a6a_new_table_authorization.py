"""New table authorization

Revision ID: d91b70b61a6a
Revises: 5d5d6ae5015a
Create Date: 2024-05-11 15:38:19.100719

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd91b70b61a6a'
down_revision: Union[str, None] = '5d5d6ae5015a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('authorization',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('iinbin', sa.String(length=12), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('is_manager', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_authorization_id'), 'authorization', ['id'], unique=False, schema='public')
    op.create_index(op.f('ix_public_authorization_iinbin'), 'authorization', ['iinbin'], unique=True, schema='public')
    op.create_index(op.f('ix_public_application_expires_at'), 'application', ['expires_at'], unique=False, schema='public')
    op.drop_constraint('application_manager_id_fkey', 'application', type_='foreignkey')
    op.drop_constraint('application_user_id_fkey', 'application', type_='foreignkey')
    op.drop_constraint('application_status_id_fkey', 'application', type_='foreignkey')
    op.create_foreign_key(None, 'application', 'user', ['user_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'application', 'status', ['status_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'application', 'user', ['manager_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('profile_update_application_application_id_fkey', 'profile_update_application', type_='foreignkey')
    op.create_foreign_key(None, 'profile_update_application', 'application', ['application_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_index('ix_public_user_iinbin', table_name='user')
    op.create_foreign_key(None, 'user', 'authorization', ['id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_column('user', 'password')
    op.drop_column('user', 'iinbin')
    op.drop_column('user', 'is_manager')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('is_manager', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('user', sa.Column('iinbin', sa.VARCHAR(length=12), autoincrement=False, nullable=False))
    op.add_column('user', sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'user', schema='public', type_='foreignkey')
    op.create_index('ix_public_user_iinbin', 'user', ['iinbin'], unique=True)
    op.drop_constraint(None, 'profile_update_application', schema='public', type_='foreignkey')
    op.create_foreign_key('profile_update_application_application_id_fkey', 'profile_update_application', 'application', ['application_id'], ['id'])
    op.drop_constraint(None, 'application', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'application', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'application', schema='public', type_='foreignkey')
    op.create_foreign_key('application_status_id_fkey', 'application', 'status', ['status_id'], ['id'])
    op.create_foreign_key('application_user_id_fkey', 'application', 'user', ['user_id'], ['id'])
    op.create_foreign_key('application_manager_id_fkey', 'application', 'user', ['manager_id'], ['id'])
    op.drop_index(op.f('ix_public_application_expires_at'), table_name='application', schema='public')
    op.drop_index(op.f('ix_public_authorization_iinbin'), table_name='authorization', schema='public')
    op.drop_index(op.f('ix_public_authorization_id'), table_name='authorization', schema='public')
    op.drop_table('authorization', schema='public')
    # ### end Alembic commands ###
