"""New table Status

Revision ID: ed7fdd3a4241
Revises: d73f5159abd9
Create Date: 2024-05-10 23:52:23.207761

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from app.models.models import Status

# revision identifiers, used by Alembic.
revision: str = 'ed7fdd3a4241'
down_revision: Union[str, None] = 'd73f5159abd9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

initial_data = [
    {'id': 1, 'name': 'Создано'},
    {'id': 2, 'name': 'Подтверждено'},
    {'id': 3, 'name': 'Утверждено'},
    {'id': 4, 'name': 'Отклонено'},
    {'id': 5, 'name': 'Не подтверждено'}
]

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=24), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.drop_constraint('application_manager_id_fkey', 'application', type_='foreignkey')
    op.drop_constraint('application_user_id_fkey', 'application', type_='foreignkey')
    op.create_foreign_key(None, 'application', 'user', ['manager_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'application', 'user', ['user_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('profile_update_application_application_id_fkey', 'profile_update_application', type_='foreignkey')
    op.create_foreign_key(None, 'profile_update_application', 'application', ['application_id'], ['id'], source_schema='public', referent_schema='public')
    # ### end Alembic commands ###

    for data in initial_data:
        op.execute(Status.__table__.insert().values(data))


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'profile_update_application', schema='public', type_='foreignkey')
    op.create_foreign_key('profile_update_application_application_id_fkey', 'profile_update_application', 'application', ['application_id'], ['id'])
    op.drop_constraint(None, 'application', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'application', schema='public', type_='foreignkey')
    op.create_foreign_key('application_user_id_fkey', 'application', 'user', ['user_id'], ['id'])
    op.create_foreign_key('application_manager_id_fkey', 'application', 'user', ['manager_id'], ['id'])
    op.drop_table('status', schema='public')
    # ### end Alembic commands ###
